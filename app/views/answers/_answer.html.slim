- if answer.persisted?
  .answer id="answer-#{answer.id}"
    .voting
      .errors
      .rating
        p Rating: #{answer.rating}
      - if can?(:vote, answer)
        p = link_to 'upvote', upvote_answer_votes_path(answer), method: :post, remote: true, class: 'vote-answer-link', data: { type: :json }
        p = link_to 'downvote', downvote_answer_votes_path(answer), method: :post, remote: true, class: 'vote-answer-link', data: { type: :json }
        p = link_to 'reset', resetvote_answer_votes_path(answer), method: :delete, remote: true, class: 'vote-answer-link', data: { type: :json }
    .votecell
      - if can?(:accept, answer)
        - if answer.accepted?
          = link_to(image_tag('accepted', size: "40x40", class: "accepted-icon"), accept_answer_path(answer), remote: true, class: 'accepted-link')
        - else
          = link_to(image_tag('accept', size: "40x40", class: "accept-icon"), accept_answer_path(answer), remote: true, class: 'accept-link')
      - elsif answer.accepted?
        = image_tag 'accepted', size: "40x40", class: "accepted-icon"
    br
    .answer-body = answer.body
    = render "attachments/show", obj: answer
    = render "layouts/user_info", obj: answer
    = render "comments/comments", commentable: answer
    
    - if can?(:destroy, answer)
      p = link_to 'delete', answer, class: 'delete-answer-link',
        method: :delete, remote: true, data: { confirm: "This will delete your answer #{answer.id}. Continue?" }
    - if can?(:update, answer)
      p = link_to 'edit', '', class: 'edit-answer-link', data: { answer_id: answer.id }
      br
      p = form_for answer, remote: true, html: {id: "edit-answer-#{answer.id}"} do |f|
        = f.label :body, 'Answer'
        br
        = f.text_area(:body, cols: 80, rows: 7)
        br
        = render 'attachments/edit', f: f
        = f.submit 'Save'
    hr
